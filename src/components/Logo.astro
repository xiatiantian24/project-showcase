---
const { coverSquare } = Astro.props;
---

<logo-element>
  <div id="logo" class="logo-container">
    <a href="/">
      <svg width="200" height="200" viewBox="0 0 200 200">
        <rect
          x="50"
          y="50"
          width="100"
          height="100"
          stroke="#454545"
          stroke-width="5"
          fill="none"
          rx="1"
          ry="1"
          transform="rotate(45, 0, 0)"></rect>

        <rect
          id="cover-square"
          class:list={[coverSquare || "coverSquare-main"]}
          width="45"
          height="45"
          rx="10"
          ry="10"
          transform="rotate(45, 0, 0) translate(54,125)"></rect>

        <line
          id="line1"
          x1="100"
          y1="50"
          x2="100"
          y2="150"
          transform="rotate(0, 0, 0) scale(1, 1.4)"
          stroke="#454545"
          stroke-width="5"
          stroke-linecap="round"></line>

        <line
          id="line2"
          x1="50"
          y1="100"
          x2="150"
          y2="100"
          transform="rotate(0, 0, 0) scale(1.4, 1)"
          stroke="#454545"
          stroke-width="5"
          stroke-linecap="round"></line>
      </svg>
    </a>
  </div>
</logo-element>

<script>
  class Logo extends HTMLElement {
    connectedCallback() {
      const logo = this.querySelector("#logo");
      const coverSquare = this.querySelector("#cover-square");
      const line1 = document.getElementById("line1");
      const line2 = document.getElementById("line2");

      logo.addEventListener("mouseenter", () => {
        coverSquare.setAttribute(
          "transform",
          "rotate(45, 0, 0) translate(25, 25)"
        );
        line1.setAttribute("transform", "rotate(45, 0, 0) scale(1, 1)");
        line2.setAttribute("transform", "rotate(45, 0, 0) scale(1, 1)");
      });

      logo.addEventListener("mousemove", (event) => {
        const mouseEvent = event as MouseEvent;
        const rect = logo.getBoundingClientRect();
        const mouseX = mouseEvent.clientX - rect.left;
        const mouseY = mouseEvent.clientY - rect.top;

        const adjustedMouseX = mouseX - 20;
        const adjustedMouseY = mouseY;

        const rotatedX =
          adjustedMouseX * Math.cos(Math.PI / 4) +
          adjustedMouseY * Math.sin(Math.PI / 4);
        const rotatedY =
          -adjustedMouseX * Math.sin(Math.PI / 4) +
          adjustedMouseY * Math.cos(Math.PI / 4);

        coverSquare.setAttribute("width", "50");
        coverSquare.setAttribute("height", "50");
        coverSquare.setAttribute("x", rotatedX * 2.4);
        coverSquare.setAttribute("y", rotatedY * 2.4);
      });

      logo.addEventListener("mouseleave", () => {
        coverSquare.setAttribute("width", "45");
        coverSquare.setAttribute("height", "45");
        coverSquare.setAttribute("transform", "rotate(45, 0, 0) translate(0,0)");
        coverSquare.setAttribute("x", "54");
        coverSquare.setAttribute("y", "125");
        line1.setAttribute("transform", "rotate(0, 0, 0) scale(1, 1.4)");
        line2.setAttribute("transform", "rotate(0, 0, 0) scale(1.4, 1)");
      });
    }
  }
  customElements.define("logo-element", Logo);
</script>

<style>
  .logo-container svg {
    width: 48px;
    height: 48px;
  }

  svg * {
    transform-origin: center;
  }

  #cover-square,
  #line1,
  #line2 {
    transition: transform 400ms ease;
  }

  .coverSquare-white {
    fill: #fff;
  }

  .coverSquare-main {
    fill: var(--color-bg-main);
  }
</style>
